<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ecs on Miguel Fernandez Arce</title><link>https://muit.xyz/drafts/series/ecs/</link><description>Recent content in ecs on Miguel Fernandez Arce</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a href="https://github.com/muit" rel="noopener">Miguel Fernandez Arce&lt;/a></copyright><lastBuildDate>Thu, 10 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://muit.xyz/drafts/series/ecs/index.xml" rel="self" type="application/rss+xml"/><item><title>A new approach to ECS APIs</title><link>https://muit.xyz/drafts/posts/ecs-new-approach-to-ecs-apis/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>https://muit.xyz/drafts/posts/ecs-new-approach-to-ecs-apis/</guid><description>Let’s talk about a different approach to ECS I have been rumbling about lately. Well, specifically, about how we query entities, manage dependencies and access/modify data.
What is ECS you ask? Fair question! ECS (as Entity-Component-System) is an architectural pattern based on DOD (data-oriented design), where you have three main elements:
Entities: They are just an identifier and don’t hold any data. Components: Structs of data associated with a single entity (1 entity can have 1 component of each type).</description></item></channel></rss>